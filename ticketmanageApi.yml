trigger:
- main

pool:
  vmImage: 'Default'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: "Build & Publish"
  jobs:
  - job: BuildJob
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: "Restore"
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: "Build"
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: "Publish"
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)/publish
      artifact: drop

- stage: Deploy
  displayName: "Deploy to VM"
  jobs:
  - deployment: DeployWeb
    environment: 'MyVMEnv'
    strategy:
      runOnce:
        deploy:
          steps:
          # Copy build output to VM
          - task: WindowsMachineFileCopy@2
            displayName: "Copy files to VM"
            inputs:
              SourcePath: '$(Pipeline.Workspace)/drop'
              MachineNames: '52.140.96.38'
              AdminUserName: 'AppVM\svc_azuredevops'   # service account username
              AdminPassword: 'Azure@99'   # stored in pipeline secrets
              TargetPath: 'C:\inetpub\wwwroot\MyApp'

          # (Optional) Restart IIS after deploy
          - task: IISWebAppManagementOnMachineGroup@0
            displayName: "Restart IIS Site"
            inputs:
              IISDeploymentType: 'IISWebsite'
              ActionIISWebsite: 'RestartWebsite'
              StartStopWebsiteName: 'MyApp'
              ResourceGroupName: ''
