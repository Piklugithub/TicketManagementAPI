trigger:
- main

pool:
  name: 'Default'
  demands:
        - Agent.Name -equals MyAgentIIS
variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: "Build & Publish"
  jobs:
  - job: BuildJob
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: "Restore"
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: "Build"
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: "Publish"
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
        zipAfterPublish: false

    - publish: $(Build.ArtifactStagingDirectory)/publish
      artifact: drop

- stage: Deploy
  displayName: "Deploy Stage"
  dependsOn: Build
  jobs:
  - job: DeployJob
    displayName: "Deploy to IIS VM"
    pool:
      name: Default          # Your self-hosted pool name
      demands:
        - Agent.Name -equals MyAgentIIS   # Replace with your IIS VM agent name
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: "Download Build Artifacts"
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: PowerShell@2
      displayName: "Deploy to IIS Folder"
      inputs:
        targetType: 'inline'
        script: |
          $source = "$(Pipeline.Workspace)\drop\publish"
          $destination = "C:\inetpub\wwwroot\MyApp"

          Write-Host "Deploying from $source to $destination..."

          if (Test-Path $destination) {
            Remove-Item "$destination\*" -Recurse -Force
          } else {
            New-Item -ItemType Directory -Path $destination -Force
          }

          Copy-Item "$source\*" $destination -Recurse -Force

          Write-Host "âœ… Deployment completed!"
